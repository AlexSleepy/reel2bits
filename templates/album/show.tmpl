{{template "base/head" .}}

<div class="row">
    <div class="col-lg-7 col-lg-offset-1 ss-user-back">
        <div class="row">
            <div class="col-lg-12">
                <h3><i class="fa fa-angle-double-left" aria-hidden="true"></i> <a href="{{URLFor "track_list" ":userSlug" .user.Slug}}">{{.user.UserName}}</a></h3>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <h3>{{ if not .album.IsPrivate }}<i class="fa fa-music" aria-hidden="true"></i>{{ else }}<i class="fa fa-lock" aria-hidden="true"></i>{{ end }} {{ SubStr .album.Name 0 40 }}</h3>
            </div>
        </div>

        {{ if .album.Description }}
            <div class="row sound-description">
                <div class="col-lg-12">
                    {{ .album.Description }}
                </div>
            </div>
        {{ end }}

        {{ if (gt .album_sounds_count 0) }}
            <div class="row sound-title">
                <div class="col-lg-12">
                    <i class="fa fa-play" aria-hidden="true"></i> <span id="song-title">{{ SubStr .sound.Title 0 70 }}</span>
                </div>
            </div>

            {{ if .sound.Track.Description }}
            <div class="row sound-description">
                <div class="col-lg-12"><span id="song-description">{{ .sound.Track.Description }}</span></div>
            </div>
            {{ end }}
        {{ end }}

        {{ if (gt .album_sounds_count 0) }}
        <div class="row">
            <div class="col-lg-12">
                <div class="row"><div class="col-lg-12">
                    <div id="waveform"></div>
                    <hr>
                </div></div>
                <div class="row">
                    <div class="col-lg-3">
                        <span id="player-time-cur"></span> / <span id="player-time-tot"></span>
                    </div>
                    <div class="col-lg-7">
                        <p align="center">
                            <button class="btn btn-primary" onclick="wavesurfer.skipBackward()">
                                <i class="fa fa-step-backward" aria-hidden="true"></i>
                            </button>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <button class="btn btn-primary" onclick="wavesurfer.playPause()">
                                <i class="fa fa-play" aria-hidden="true"></i> / <i class="fa fa-pause" aria-hidden="true"></i>
                            </button>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <button class="btn btn-primary" onclick="wavesurfer.skipForward()">
                                <i class="fa fa-step-forward" aria-hidden="true"></i>
                            </button>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <button class="btn btn-primary" onclick="wavesurfer.toggleMute()">
                                <i class="fa fa-volume-off" aria-hidden="true"></i>
                            </button>
                        </p>
                    </div></div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <table class="table table-condensed table-album-sounds">
                    <thead><tr><th></th><th></th><th></th><th></th></tr></thead>
                    <tbody>
                    {{ range .tracks }}
                    <tr class="play-song {{if (eq $.sound.Track.ID .Track.ID)}}song-active{{end}}" data-soundid="{{ .Track.ID }}" data-href="{{URLFor "track_infos_json" ":userSlug" $.user.Slug ":trackSlug" .Track.Slug}}" data-hrefreorder="{{URLFor "track_reorder" ":userSlug" $.user.Slug ":trackSlug" .Track.Slug}}">
                    <td width="10px">{{ .Track.AlbumOrder }}</td>
                    <td width="20px"><a href="{{ URLFor "track_show" ":userSlug" $.user.Slug ":trackSlug" .Track.Slug }}"><i class="fa fa-link" aria-hidden="true"></i></a></td>
                    <td class="switch-song"><i class="fa fa-{{ if .Track.IsPrivate }}lock{{ else }}play{{ end }}" aria-hidden="true"></i> {{ SubStr .Track.Title 0 70 }}</td>
                    <td class="switch-song ast-duration">{{ DurationToHuman .TrackInfo.Duration }}</td>
                    </tr>
                    {{ end }}
                    </tbody>
                </table>
            </div>
        </div>
        {{ else }}
        <div class="row"><div class="col-lg-7 col-lg-offset-1">This album is empty.</div></div>
        {{ end }}

    </div>

    <!-- right sidebar -->
    <div class="col-lg-4">
        <div class="row">
            <div class="col-lg-12">
                <h3><i class="fa fa-calendar" aria-hidden="true"></i> {{ ElapsedToHuman .album.CreatedUnix }}</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <table class="table table-condensed table-hoverable">
                    <tr>
                        <td>
                        </td>
                        {{ if (eq .IsLogged true) and (eq .album.UserID .LoggedUserID) }}
                        <td class="si_btn_edit"><a class="btn btn-success btn-xs" href="{{URLFor "album_edit" ":userSlug" .user.Slug ":albumSlug" .album.Slug}}">edit</a></td>
                        <td class="si_btn_delete">
                            <a role="button" tabindex="0" class="btn btn-danger btn-xs" data-trigger="focus"
                               data-container="body" data-toggle="popover" data-placement="top" data-html="true"
                               data-content="<a class='btn btn-success btn-xs delete_album_link' data-url='{{URLFor "album_delete" ":userSlug" .user.Slug ":albumSlug" .album.Slug}}' data-user='{{.user.Slug}}' data-album='{{.album.Slug}}'   >yes really</a>">delete</a>
                        </td>
                        {{ end }}
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>


{{ define "scriptsAlbumShow" }}
<script type="application/javascript">
    function switch_song(element, autoplay) {
        console.log("Switching to song ID " + element.data().soundid);

        $.getJSON(element.data().href, function() {
           console.log("success");
        }).done(function(data) {
            $('.song-active').removeClass('song-active');

            wavesurfer.stop();
            wavesurfer.empty();
            load_wf(data.track_url, data.waveform.Data);

            $('#song-title').html(data.title.substring(0, 70));
            $('#song-description').html(data.description);

            element.addClass("song-active");

            $('#player-time-cur').html("00:00");
            $('#player-time-tot').html(secondsTimeSpanToMS(wavesurfer.getDuration()));

            if (autoplay) {
                wavesurfer.play();
            }
        }).fail(function(data) {
            wavesurfer.empty();
        });


    }

    $("td.switch-song").click(function() {
        if ($(this).parent().hasClass("song-active")) {
            console.log("I don't want to do that :(");
            return; // ignore self click
        }
        var element = $(this).parent();
        switch_song(element, false);
    });

    opts = {
        backend: 'MediaElement',
        container: '#waveform',
        waveColor: 'darkorange',
        progressColor: 'purple',
        splitChannels: false,
        barWidth: 3,
        height: 64
    };
    var wavesurfer = WaveSurfer.create(opts);

    function load_wf(path_media, waveform) {
        var max = Math.max.apply(Math, waveform);
        wavesurfer.load(path_media, waveform.map(p => p / max));
    }

    $('#player-time-cur').html("00:00");
    $('#player-time-tot').html(secondsTimeSpanToMS(wavesurfer.getDuration()));

    wavesurfer.on('audioprocess', function() {
        var current_time = wavesurfer.getCurrentTime();
        $('#player-time-cur').html(secondsTimeSpanToMS(current_time));
    });
    wavesurfer.on('seek', function() {
        var current_time = wavesurfer.getCurrentTime();
        $('#player-time-cur').html(secondsTimeSpanToMS(current_time));
    });
    wavesurfer.on('ready', function() {
        var duration_time = wavesurfer.getDuration();
        $('#player-time-tot').html(secondsTimeSpanToMS(duration_time));
    });
    wavesurfer.on('error', function(data) {
        console.log(data);
    });
    wavesurfer.on('finish', function() {
        let a = $('.song-active').next();
        if (a.length > 0) {
            switch_song(a, true);
        }
    });

    {{ if (gt .album_sounds_count 0) }}
    // initial call, but only if we have an initial sound
    var wf_datas = {{ Unescape .sound.TrackInfo.Waveform }};
    {{if (eq .sound.Track.Mimetype "audio/mpeg")}}
    var filename = "{{URLFor "media_track_stream" ":userSlug" .user.Slug ":trackSlug" .sound.Track.Slug ":type" "orig"}}";
    {{else}}
    var filename = "{{URLFor "media_track_stream" ":userSlug" .user.Slug ":trackSlug" .sound.Track.Slug ":type" "mp3"}}";
    {{end}}

    load_wf(filename, wf_datas.data);
    {{end}}

    $(function () {
        $('[data-toggle="popover"]').popover();
    });

    let table = $('.table-album-sounds').DataTable( {
        paging: false,
        scrollY: 400,
        searching: false,
        rowReorder: {
            update: true,
        },

        fnDrawCallback: function() {
            $(".table-album-sounds thead").remove();
        }
    });

    table.on( 'row-reorder', function ( e, diff, edit ) {
        let href = diff[1].node.dataset.hrefreorder;

        console.log('asked to move some rows');

        let moved = [];

        for ( let i=0, ien=diff.length ; i<ien ; i++ ) {
            let rowData = table.row( diff[i].node ).data();
            moved.push({'soundid': diff[i].node.dataset.soundid, 'oldPosition': diff[i].oldPosition + 1, 'newPosition': diff[i].newPosition + 1});
        }

        console.log("will be asking backend");

        $.post({
            url: href,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify({'data': moved}),
        }).done(function( data ) {
            console.log("position changed in database successfully.");
            return true;
        }).fail(function(data) {
            // nope
            console.log("Ajax fail");
            // table.draw(false);
            e.stopPropagation();
        });
        // default
        e.stopPropagation();
    } );
</script>
{{ end }}

{{template "base/footer" .}}