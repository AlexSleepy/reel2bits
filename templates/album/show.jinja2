{% extends "layout.jinja2" %}
{% import "bootstrap/wtf.html" as wtf %}

{% block content %}
    <div class="row">
        <div class="col-lg-3 col-lg-offset-1 ss-user-back">
            <h3><i class="fa fa-angle-double-left" aria-hidden="true"></i> <a href="{{ url_for("bp_users.profile", name=album.user.name) }}">{{ album.user.name }}</a></h3>
        </div>
        <div class="col-lg-5">
        </div>
    </div>

    <div class="row">
        <div class="col-lg-7 col-lg-offset-1">
            <h3>{% if not album.private %}<i class="fa fa-music" aria-hidden="true"></i>{% else %}<i class="fa fa-lock" aria-hidden="true"></i>{% endif %} {{ album.title|truncate(40) }}</h3>
        </div>

        <div class="col-lg-3">
            <h3><i class="fa fa-calendar" aria-hidden="true"></i> {{ gettext("%(value)s ago", value=duration_elapsed_human(album.elapsed())) }}</h3>
        </div>
    </div>

    {% if album.description %}
        <div class="row sound-description">
        <div class="col-lg-6 col-lg-offset-1">
            {{ album.description }}
        </div>
        </div>
    {% endif %}

    {% if album.sounds.count() > 0 %}
    <div class="row">
        <div class="col-lg-6 col-lg-offset-1">
            <i class="fa fa-play" aria-hidden="true"></i> <span id="song-title">{{ sound.title|truncate(70) }}</span>
        </div>
    </div>
    {% endif %}

{% if album.sounds.count() > 0 %}
<div class="row">
    <div class="col-lg-7 col-lg-offset-1">
        <div class="row"><div class="col-lg-12">
            <div id="waveform"></div>
            <hr>
        </div></div>
        <div class="row">
            <div class="col-lg-3">
                <span id="player-time-cur"></span> / <span id="player-time-tot"></span>
            </div>
            <div class="col-lg-7">
            <p align="center">
                <button class="btn btn-primary" onclick="wavesurfer.skipBackward()">
                    <i class="fa fa-step-backward" aria-hidden="true"></i>
                </button>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <button class="btn btn-primary" onclick="wavesurfer.playPause()">
                    <i class="fa fa-play" aria-hidden="true"></i> / <i class="fa fa-pause" aria-hidden="true"></i>
                </button>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <button class="btn btn-primary" onclick="wavesurfer.skipForward()">
                    <i class="fa fa-step-forward" aria-hidden="true"></i>
                </button>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <button class="btn btn-primary" onclick="wavesurfer.toggleMute()">
                    <i class="fa fa-volume-off" aria-hidden="true"></i>
                </button>
            </p>
        </div></div>
    </div>
    <div class="col-lg-3">
        <table class="table table-condensed table-hoverable">
                <tr>
                    <td>
                    </td>
                    {% if current_user.is_authenticated and album.user_id == current_user.id  %}
                        <td class="si_btn_edit"><a class="btn btn-success btn-xs" href="{{ url_for('bp_albums.edit', username=album.user.name, setslug=album.slug) }}">edit</a></td>
                        <td class="si_btn_delete">
                        <a role="button" tabindex="0" class="btn btn-danger btn-xs" data-trigger="focus"
                           data-container="body" data-toggle="popover" data-placement="top" data-html="true"
                           data-content="<a class='btn btn-success btn-xs delete_log_link' href='{{ url_for('bp_albums.delete', username=album.user.name, setslug=album.slug) }}'>{{ gettext("yes really") }}</a>">{{ gettext("delete") }}</a>
                        </td>
                    {% endif %}
                </tr>
        </table>
    </div>
</div>

    <div class="row">
        <div class="col-lg-7 col-lg-offset-1">
            <table class="table table-condensed table-album-sounds">
            <thead><tr><th></th><th></th><th></th><th></th></tr></thead>
                <tbody>
                {% for sound in album.sounds.order_by('album_order asc') %}
                <tr class="play-song {% if loop.first %}song-active{% endif %}" data-soundid="{{ sound.id }}" data-href="{{ url_for('bp_sound.waveform_json', username=sound.user.name, soundslug=sound.slug) }}" data-hrefreorder="{{ url_for('bp_albums.reorder_json', username=sound.user.name, setslug=album.slug) }}">
                    <td width="10px">{{ sound.album_order }}</td>
                    <td width="20px"><a href="{{ url_for("bp_sound.show", username=album.user.name, soundslug=sound.slug) }}"><i class="fa fa-link" aria-hidden="true"></i></a></td>
                    <td class="switch-song"><a><i class="fa fa-{% if sound.private %}lock{% else %}play{% endif %}" aria-hidden="true"></i> {{ sound.title|truncate(70) }}</a></td>
                    <td class="ast-duration">{{ duration_song_human(sound.sound_infos.first().duration) }}</td>
                </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
    {% else %}
    <div class="row">
    <div class="col-lg-7 col-lg-offset-1">
    </div>
        <div class="col-lg-3">
        <table class="table table-condensed table-hoverable">
            <tr></tr>
            <tr>
                {% if current_user.is_authenticated and album.user_id == current_user.id  %}
                    <td class="si_btn_edit"><a class="btn btn-success btn-xs" href="{{ url_for('bp_albums.edit', username=album.user.name, setslug=album.slug) }}">{{ gettext('edit') }}</a></td>
                    <td class="si_btn_delete">
                    <a role="button" tabindex="0" class="btn btn-danger btn-xs" data-trigger="focus"
                       data-container="body" data-toggle="popover" data-placement="top" data-html="true"
                       data-content="<a class='btn btn-success btn-xs delete_log_link' href='{{ url_for('bp_albums.delete', username=album.user.name, setslug=album.slug) }}'>{{ gettext("yes really") }}</a>">{{ gettext("delete") }}</a>
                    </td>
                {% endif %}
            </tr>
        </table>
    </div>
    <div class="row"><div class="col-lg-7 col-lg-offset-1">{{ gettext('This album is empty.') }}</div></div>
    {% endif %}

{% endblock %}

{% block scripts %}
<script>
    {% if sound %}
    function switch_song(element, autoplay) {
        console.log("Switching to song ID " + element.data().soundid);

        $.getJSON(element.data().href, function() {
           console.log("success");
        }).done(function(data) {
            $('.song-active').removeClass('song-active');

            wavesurfer.stop();
            wavesurfer.empty();
            load_wf("/uploads/sounds/" + data.filename, data.data);

            $('#song-title').html(data.title.substring(0, 70));

            element.addClass("song-active");

            $('#player-time-cur').html("00:00");
            $('#player-time-tot').html(secondsTimeSpanToMS(wavesurfer.getDuration()));

            if (autoplay) {
                wavesurfer.play();
            }
        }).fail(function(data) {
            //show_alert("danger", '{{ gettext("Switch sound") }}', '{{ gettext("An error occured") }}')
        });


    }

    $("td.switch-song").click(function() {
        if ($(this).parent().hasClass("song-active")) {
            console.log("no, seriously ?");
            return; // ignore self click
        }
        var element = $(this).parent();
        switch_song(element, false);
    });

    opts = {
        backend: 'MediaElement',
        container: '#waveform',
        waveColor: 'darkorange',
        progressColor: 'purple',
        splitChannels: false,
        barWidth: 3,
        height: 64
    };
    var wavesurfer = WaveSurfer.create(opts);

    function load_wf(path_media, waveform) {
        var max = Math.max.apply(Math, waveform);
        wavesurfer.load(path_media, waveform.map(p => p / max));
    }

    $('#player-time-cur').html("00:00");
    $('#player-time-tot').html(secondsTimeSpanToMS(wavesurfer.getDuration()));

    wavesurfer.on('audioprocess', function() {
        var current_time = wavesurfer.getCurrentTime();
        $('#player-time-cur').html(secondsTimeSpanToMS(current_time));
    });
    wavesurfer.on('seek', function() {
        var current_time = wavesurfer.getCurrentTime();
        $('#player-time-cur').html(secondsTimeSpanToMS(current_time));
    });
    wavesurfer.on('ready', function() {
        var duration_time = wavesurfer.getDuration();
        $('#player-time-tot').html(secondsTimeSpanToMS(duration_time));
    });
    wavesurfer.on('error', function(data) {
        console.log(data);
    });
    wavesurfer.on('finish', function() {
        let a = $('.song-active').next();
        if (a.length > 0) {
            switch_song(a, true);
        }
    });

    // initial call
    {% set first_sound = sound.sound_infos.first() %}
    var wf_datas = {{ first_sound.waveform }};
    load_wf("{{ url_for('get_uploads_stuff', thing='sounds', stuff=sound.path_sound()) }}", wf_datas.data);

    {% endif %}

    $(function () {
        $('[data-toggle="popover"]').popover();
    });

    let table = $('.table-album-sounds').DataTable( {
        paging: false,
        scrollY: 400,
        searching: false,
        rowReorder: {
            update: true,
        },

        fnDrawCallback: function() {
            $(".table-album-sounds thead").remove();
        }
    });

    table.on( 'row-reorder', function ( e, diff, edit ) {
        let href = diff[1].node.dataset.hrefreorder;

        console.log('asked to move some rows');

        let moved = [];

        for ( let i=0, ien=diff.length ; i<ien ; i++ ) {
            let rowData = table.row( diff[i].node ).data();
            moved.push({'soundid': diff[i].node.dataset.soundid, 'oldPosition': diff[i].oldPosition + 1, 'newPosition': diff[i].newPosition + 1});
        }

        console.log("will be asking backend");

        $.post({
            url: href,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify({'data': moved}),
        }).done(function( data ) {
            console.log("position changed in database successfully.");
            return true;
        }).fail(function(data) {
            // nope
            console.log("Ajax fail");
            // table.draw(false);
            e.stopPropagation();
        });
        // default
        e.stopPropagation();
    } );


</script>
{% endblock %}